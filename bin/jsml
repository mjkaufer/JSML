#!/usr/bin/env node

var fs = require('fs'),
	optparse = require('../lib/optparse'),
	pac = require('../package.json'),
	compile = require('./compile.js');

exports.toJSML = compile.toJSML;

String.prototype.isAString = true;

var parser = new optparse.OptionParser([
	['-h', '--help', 'Shows help screen'],
	['-O', '--output FILE', 'File output, no argument is stdout'],
	['-c', '--compile FILE', 'compiles .json to .html']
]);

var input, output;

parser.on('help', function() {
	console.log('Usage: jsml -c FILE [-O FILE]\n'+
				'JSON Markup Language, or jsml is an investigation into the effectiveness of creating webpages in JSON.\n\n'+
				'Command Line Arguments:\n'+
				'  -h  --help     This page\n'+
				'  -O  --output   HTML file\n'+
				'  -c  --compile  JSML file\n\n'+
				'version '+pac.version+', (c) 2015\n'+
				'Source: '+pac.homepage
	);
});

parser.on('output', function(opt, val) {
	output = val;
});

parser.on('compile', function(opt, val) {
	if (!opt) { // No input file has been specified.
		console.error("Specify compile file with option '-C'.");
		process.exit(1);
	}

	outputJSML(val);

});

parser.on(2, function(val){ //default input
	input = val;

	output = input.replace(/\.jsml$/g, "") + ".html"
	if(process.argv.length <= 3)
		outputJSML(input);
});

parser.on(3, function(val){
 	output = val;
 	outputJSML(input);
});

parser.on(function(opt) {
    console.log('Error - see `jsml --help`');
});

parser.parse(process.argv);

function outputJSML(infile){
	fs.readFile(infile || process.stdin, 'utf8', function(err, json) {
		if (err) {
			console.error(err);
			process.exit(1);
		}

		json = compile.toJSML(json);

		if (!output) console.log(jsml);
		else fs.writeFile(output, jsml, function(err) {
			if (err) console.error(err);
			else
				console.log("Done compiling " + input + " - saved as " + output);
		});
	});
}

